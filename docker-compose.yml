version: '2.1'

services:
  # AplicaciÃ³n
  app:
    image: tianon/true
    # Uncomment following lines and modify path for CUSTOM_CA
    # - /usr/local/share/ca-certificates/overcloud-cacert-mo.crt:/usr/local/share/ca-certificates/custom-ca.crt
    volumes_from:
      - downloader

  # Nuevo servicio para descargar archivos
  downloader:
    image: alpine:latest # Usamos una imagen ligera de Alpine Linux
    command: >
      /bin/sh -c "apk add --no-cache wget unzip rsync && \
                if [ ! -e /var/www/done ]; then \
                  wget -O /var/www/html.zip https://download.moodle.org/download.php/direct/stable401/moodle-4.1.11.zip && \
                  unzip /var/www/html.zip -d /var/www/ && \
                  touch /var/www/done ; \
                fi && \
                  tail -f /dev/null"
    volumes:
      - ./${REPO_FOLDER}:${DOCUMENT_ROOT}
      - ./moodledata:${MOODLE_DATA}

  # Servicio de postgres:
  postgres:
    image: "postgres:14"
    build:
      context: ./postgres
      args:
        locale: "${PG_LOCALE}"
    expose:
      - "${PG_PORT}"
    # Uncomment following lines to expose postgres to host network
    # ports:
    #   - "${IP}:${PG_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db_dumps:/opt/db_dumps:z
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    depends_on:
      - app

  # Servicio de PHP-FPM
  php:
    image: "oberonamsterdam/php:8.1-fpm"
    restart: always
    build:
      context: ./php-fpm
    volumes:
      - ./${REPO_FOLDER}:${DOCUMENT_ROOT}
      - ./moodledata:${MOODLE_DATA}

  # Servicio de Apache2
  web:
    image: oberonamsterdam/apache24-fpm
    restart: always
    build:
      context: ./apache2
      args:
        DOCUMENT_ROOT: ${DOCUMENT_ROOT}
        PHP_SOCKET: php:${PHP_SOCKET}
        ALIAS_DOMAIN: ${ALIAS_DOMAIN}
    environment:
      - "VIRTUAL_HOST=localhost"
      - "APACHE_DOCUMENTROOT=/var/www/moodle"
      - "PHP_FPM_PORT=9000"
    volumes_from:
      - app
    volumes:
            - ./apache2/myconfiguration.conf:/usr/local/apache2/conf/other/myconfiguration.conf
    ports:
      - "${IP}:${WWW_PORT}:80"
    links:
      - php
    depends_on:
      - php

  # Gestor de base de datos
  pgadmin:
    image: dpage/pgadmin4
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/pgpass;
      chmod 600 /var/lib/pgadmin/pgpass;
      chown pgadmin:pgadmin /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-ti@lucas.cl}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-lucas123}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "${IP}:5050:80"
    volumes:
      - ./servers.json:/pgadmin4/servers.json # preconfigured servers/connections
      - ./pgpass:/pgadmin4/pgpass
      - ./db_dumps:/root:z
    links:
      - postgres
    depends_on:
      - postgres

volumes:
  postgres-data:
    driver: "local"
    

networks:
  default:
    # No ipv6 configuration here
